EVT_WDF_IO_QUEUE_IO_INTERNAL_DEVICE_CONTROL HF_InternIoCtl;


#ifdef _IOCTL_

typedef UCHAR HID_REPORT_DESCRIPTOR, *PHID_REPORT_DESCRIPTOR;
CONST HID_REPORT_DESCRIPTOR DefaultReportDescriptor[] = {
		// Mouse Descriptor
    0x05, 0x01, // Usage Page (Generic Desktop),
    0x09, 0x02, // Usage (Mouse),
    0xA1, 0x01, // Collection (Application),
	0x85, 0x02,   // Report ID 02.
    0x09, 0x01, // Usage (Pointer),
    0xA1, 0x00, // Collection (Physical),
    0x05, 0x09, // Usage Page (Buttons),
    0x19, 0x01, // Usage Minimum (01),
    0x29, 0x03, // Usage Maximun (03),
    0x15, 0x00, // Logical Minimum (0),
    0x25, 0x01, // Logical Maximum (1),
	0x65, 0x00, //unit none
	0x75, 0x01, // Report Size (1),
    0x95, 0x03, // Report Count (3),
    0x81, 0x02, // Input (Data, Variable, Absolute), ;3 button bits
    0x95, 0x01, // Report Count (1),
    0x75, 0x05, // Report Size (5),
    0x81, 0x03, // Input (Constant), ;5 bit padding
    0x05, 0x01, // Usage Page (Generic Desktop),
	0x09, 0x30, // Usage (X),
    0x09, 0x31, // Usage (Y),
	0x09, 0x38,	//Wheel
    0x15, 0x81, // Logical Minimum (-127),
    0x25, 0x7f, // Logical Maximum (127),
    0x75, 0x08, // Report Size (8),
    0x95, 0x03, // Report Count (2),
    0x81, 0x06, // Input (Data, Variable, Relative), ;2 position bytes (X & Y)
    0xC0, // End Collection,
    0xC0, // End Collection

	// Keyboard descriptor
    0x05,   0x01,       // Usage Page (Generic Desktop),
    0x09,   0x06,       // Usage (Keyboard),
    0xA1,   0x01,       // Collection (Application),
    0x85, 0x03,   // Report ID.
    0x05,   0x07,       //  Usage Page (Key Codes);
    0x19,   0x00,       //  Usage Minimum (0),
    0x29,   0xe7,       //  Usage Maximum (231),
    0x15,   0x00,       //  Logical Minimum (0),
    0x25,   0x01,       //  Logical Maximum (1),
    0x75,   0x01,       //  Report Size (1),
    0x95,   0xe8,       //  Report Count (232),
    0x81,   0x02,       //  Input (Data, Variable, Absolute),;Modifier byte
    0xC0,                // End Collection

		0x05, 0x01,
		0x09, 0x04,  //usage joystick
		0xa1, 0x01,
		0x85, 0x01,   // Report ID.
		0x15, 0x00,   // logical min
		0x26, 0xff, 0x0f, //logical max
		0x75, 0x10,  //report size
		0x09, 0x01, //usage pointer
		0xa1, 0x00,  // collection physical
		0x09, 0x30,  //X
		0x09, 0x31,  //Y
		0x95, 0x02,  //report count 2
		0x81, 0x02, 
		0xc0,

		0x09, 0x35,	//Rudder(Rz)
		0x09, 0x32,  //throttle
		0x09, 0x33,  //Rx
		0x09, 0x34,  //Ry
		0x09, 0x36,  //Slider 1
		0x95, 0x05, //report count 5
		0x81, 0x02,
		0x26, 0xff, 0x00, //logical max
		0x09, 0x36,  //Slider 2
		0x95, 0x01,  //report count 1
		0x81, 0x02,
		0x26, 0xff, 0x03, //logical max
		0x46, 0x0ff,0x03, //physical max
		0x09, 0x43,  //Vz
		0x95, 0x01,  //report count 1
		0x66, 0x11, 0xf0, //unit velicity
		0x81, 0x02,

		0x15, 0x01, //logical min 1
		0x25, 0x08, //logical max 8
		0x35, 0x00, //physical min
		0x46, 0x3b, 0x01, //physical max
		0x65, 0x14, //unit measure
		0x55, 0x00, //unit exponent
		0x09, 0x39, //Hat1
		0x09, 0x39, //Hat2
		0x09, 0x39, //Hat3
		0x09, 0x39, //Hat4
		0x75, 0x08,  //report size 8
		0x95, 0x04,  //report count
		0x81, 0x42,

		0x05,0x09,	//botones
		0x19,0x01,
		0x29,0x38,
		0x15,0x00,
		0x25,0x01,
		0x45,0x01, //physical max 1
		0x65,0x00, //unit none
		0x75,0x01, //report size 1
		0x95,0x38, //report count 56
		0x81,0x02,

		0x05, 0x01, //usage page generic desktop
		0x09, 0x01, //usage pointer
		0xa1, 0x00,  // collection physical
		0x25, 0x0f, // logical max 15
		0x45,0x0f, //physical max 15
		0x09, 0x30,  //X
		0x09, 0x31,  //Y
		0x95, 0x02,  //report count 2
		0x75, 0x04, //report size 4
		0x66,0x11,0xf0, //unit velicity
		0x81, 0x02, 
		0xc0,

		//0x05,0x01, //ministick
			//0x15,0x00,
			//0x25,0x0f,
			//0x35,0x00,
			//0x45,0x0f,
			//0x95,0x01,
			//0x75,0x04,
			//0x66,0x11,0xf0, //unit velicity
			//0x09,0x30, //vx
			//0x81,0x02,
			//0x09,0x31, //vy
			//0x81,0x02,

		0xc0




};

NTSTATUS
GetHidDescriptor(
    IN WDFREQUEST Request
    );

NTSTATUS
GetReportDescriptor(
    IN WDFREQUEST Request
    );

NTSTATUS
GetDeviceAttributes(
    IN WDFREQUEST Request
    );

#endif